%tr.form-header
  - if reorderable
    %td \=

  %td
    - name = form.object.try(:name) || form.object.try(:title) || "#{ form.object.class.model_name.human } - #{ (id = form.object.id) ? id : "(#{ t('para.form.nested.new') })" }"
    - uid = "fields-#{ (Time.now.to_f * 1000).to_i }-#{ form.object.id || "_new_#{ attribute_name }_id"}"

    = link_to name, "##{ uid }", data: { toggle: 'collapse', :'open-on-insert' => true }

  - if allow_destroy
    %td
      = link_to_remove_association t('para.form.nested.remove'), form, wrapper_class: 'form-header', class: 'btn btn-danger', data: { :'remove-also' => "##{ uid }" }

%tr.form-inputs.collapse{ id: uid }
  %td{ colspan: columns_length }
    - model_field_mappings(form.object.class).fields.each do |field|
      -# Do not display inverse relation when nested
      - next if (reflection = parent.class.reflections[attribute_name]) && reflection.options[:inverse_of] == field.name

      - if field.field_type
        = form.send(field.field_method, field.name, as: field.field_type)
      - else
        = form.send(field.field_method, field.name)
